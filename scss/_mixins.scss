@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
@mixin box-shadow($color: rgba(0, 0, 0, 0.1)) {
    box-shadow: 0 2px 5px $color;
}

/* Mixin for button styling */
@mixin button-style($padding, $font-weight) {
    border: none;
    cursor: pointer;
    background-color: $color-orange;
    padding: $padding;
    text-decoration: none !important;
    color: $color-white;
    font-size: $btn-font-size;
    box-shadow: $btn-box-shadow;
    font-weight: $font-weight;
    letter-spacing: $btn-letter-spacing;
}
@mixin btn-orange-large 
{
@include button-style(10px 20px, 800);
}
// add an circular orange for decoorative purpose
@mixin circle-orange($radius, $border-radius){
        width: #{$radius}px;    
        height: #{$radius}px;    
        background-color: $color-orange; 
        border-radius: $border-radius;
        flex-shrink: 0; /* Ensure the circle doesn't shrink */    
}

@mixin toggle-btn($color){
    color: $color;
    background: none;
    border: none;
    font-size: 1.8em;
    cursor: pointer;
}

@mixin give-padding($padding:default(0)){
    padding: $padding;
}

// Mixin for dynamic grid layout (columns and/or rows)
@mixin grid-layout($columns: null, $rows: null, $gap: null) {
    display: grid;
  
    // Conditional logic for columns
    @if $columns != null {
      grid-template-columns: #{join($columns, ' ')};
    }
  
    // Conditional logic for rows
    @if $rows != null {
      grid-template-rows: #{join($rows, ' ')};
    }
    @if $gap != null {
    gap: $gap; 
    } 
}